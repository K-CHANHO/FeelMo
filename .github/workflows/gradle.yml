# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build

#      - name: Upload artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: cicdsample
#          path: build/libs/*.jar

#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: cicdsample
#
#      - name: Setup SSH
#        uses: webfactory/ssh-agent@v0.5.4
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#
#      - name: SCP transfer
#        run: scp *.jar ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/cicd
#
#      - name: Execute remote commands
#        run: |
#          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "sudo fuser -k 8080/tcp || true"
#          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "sudo nohup /usr/bin/java -jar ~/cicd/*.jar &"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
#      - name: Download artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: cicdsample
#          path: "build/libs"

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Build App
        run: ./gradlew bootJar

      - name: Deliver File
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./build/libs/*.jar"
          target: "/home/ubuntu"

      - name: Execute Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            SOURCE_DIR=/home/ubuntu
            FILE_NAME=`find $SOURCE_DIR/*.jar -printf "%f\n"`
            PID=`ps -ef | grep occupying | grep sudo | grep -v "bash -c" | awk '{print $2}'`
            
            if [ -z "$PID" ]; then
                    echo "#### THERE IS NO PROCESS ####"
            else
                    echo "#### KILL $PID ####"
                    sudo kill $PID
            fi
            
            echo "#### RUN $SOURCE_DIR/$FILE_NAME ####"
            
            sudo java -jar $SOURCE_DIR/$FILE_NAME &